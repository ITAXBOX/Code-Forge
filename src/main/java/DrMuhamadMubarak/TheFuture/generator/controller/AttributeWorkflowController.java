package DrMuhamadMubarak.TheFuture.generator.controller;

import DrMuhamadMubarak.TheFuture.generator.dto.AttributeDTO;
import DrMuhamadMubarak.TheFuture.generator.service.ProjectAttributeGenerationService;
import lombok.AllArgsConstructor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.io.IOException;

import static DrMuhamadMubarak.TheFuture.generator.builder.AttributeBuilder.createAttributeDTO;

@Controller
@AllArgsConstructor
public class AttributeWorkflowController {

    private final ProjectAttributeGenerationService attributeService;

    @GetMapping("/add-attributes")
    public String showAddAttributesPage(@RequestParam("projectName") String projectName,
                                        @RequestParam("entityName") String entityName,
                                        Model model) {
        model.addAttribute("projectName", projectName);
        model.addAttribute("entityName", entityName);
        return "add-attributes";
    }

    @PostMapping("/save-attributes")
    public String saveAttributes(
            @RequestParam("projectName") String projectName,
            @RequestParam("entityName") String entityName,
            @RequestParam("action") String action,
            @RequestParam(value = "attributeName") String attributeName,
            @RequestParam(value = "dataType") String dataTypeStr,
            @RequestParam(value = "dataSize", required = false) String dataSize,
            @RequestParam(value = "defaultValue", required = false) String defaultValue,
            @RequestParam(value = "isPrimaryKey", required = false) Boolean isPrimaryKey,
            @RequestParam(value = "isNullable", required = false) Boolean isNullable,
            @RequestParam(value = "relationshipType", required = false) String relationshipTypeStr,
            @RequestParam(value = "isAutoGenerated", required = false) Boolean isAutoGenerated,
            @RequestParam(value = "relatedEntity", required = false) String relatedEntity,
            @RequestParam(value = "mappedBy", required = false) String mappedBy,
            Model model) {

        try {
            AttributeDTO attribute = createAttributeDTO(
                    attributeName, dataTypeStr, dataSize, defaultValue,
                    isPrimaryKey, isNullable, relationshipTypeStr, isAutoGenerated, relatedEntity, mappedBy
            );

            return attributeService.saveAttributes(projectName, entityName, action, attribute, model);
        } catch (IOException e) {
            model.addAttribute("message", "An error occurred: " + e.getMessage());
            return "error";
        }
    }
}