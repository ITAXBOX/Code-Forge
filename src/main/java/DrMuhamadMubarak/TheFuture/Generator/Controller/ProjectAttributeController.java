package DrMuhamadMubarak.TheFuture.Generator.Controller;

import DrMuhamadMubarak.TheFuture.Generator.DTO.AttributeDTO;
import DrMuhamadMubarak.TheFuture.Generator.Service.ProjectAttributeService;
import DrMuhamadMubarak.TheFuture.Generator.Service.ProjectEntitiesService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

@Controller
public class ProjectAttributeController {

    private int index = 0;
    private final ProjectEntitiesService projectEntitiesService;
    private final ProjectAttributeService projectAttributeService;
    private static List<AttributeDTO> attributes = new ArrayList<>();

    public ProjectAttributeController(ProjectEntitiesService projectEntitiesService, ProjectAttributeService projectAttributeService) {
        this.projectEntitiesService = projectEntitiesService;
        this.projectAttributeService = projectAttributeService;
    }

    @GetMapping("/add-attributes")
    public String addAttributes(@RequestParam("projectName") String projectName,
                                @RequestParam("entityName") String entityName,
                                Model model) {
        model.addAttribute("projectName", projectName);
        model.addAttribute("entityName", entityName);
        return "add-attributes";
    }

    @PostMapping("/save-attributes")
    public String saveAttributes(
            @RequestParam("projectName") String projectName,
            @RequestParam("entityName") String entityName,
            @RequestParam("action") String action,
            @RequestParam(value = "attributeName") String attributeName,
            @RequestParam(value = "dataType") String dataTypeStr,
            @RequestParam(value = "dataSize", required = false) String dataSize,
            @RequestParam(value = "defaultValue", required = false) String defaultValue,
            @RequestParam(value = "isPrimaryKey", required = false) Boolean isPrimaryKey,
            @RequestParam(value = "isNullable", required = false) Boolean isNullable,
            @RequestParam(value = "relationshipType", required = false) String relationshipTypeStr,
            @RequestParam(value = "isAutoGenerated", required = false) Boolean isAutoGenerated,
            Model model) {

        try {
            boolean primaryKey = isPrimaryKey != null ? isPrimaryKey : false;
            boolean nullable = isNullable != null ? isNullable : true;
            boolean autoGenerated = isAutoGenerated != null ? isAutoGenerated : false;

            AttributeDTO attribute = new AttributeDTO(
                    attributeName,
                    dataTypeStr,
                    dataSize,
                    defaultValue,
                    autoGenerated,
                    primaryKey,
                    nullable,
                    relationshipTypeStr
            );

            projectAttributeService.addAttributesToEntity(projectName, entityName, attribute);

            attributes.add(attribute);

            model.addAttribute("projectName", projectName);
            if ("next".equals(action)) {

                projectEntitiesService.generateServiceClass(projectName, entityName, attributes);
                projectEntitiesService.generateControllerClass(projectName, entityName);
                projectEntitiesService.generateUI(projectName, entityName, attributes);

                attributes = new ArrayList<>();

                if (++index >= projectEntitiesService.getEntities().length) {
                    model.addAttribute("message", "Project generated successfully");
                    return "result";
                }
                model.addAttribute("entityName", projectEntitiesService.getEntities()[index]);
            } else {
                model.addAttribute("entityName", entityName);
            }
            return "add-attributes";
        } catch (IOException e) {
            model.addAttribute("message", "An error occurred: " + e.getMessage());
            return "error";
        }
    }

    public void resetIndex() {
        index = 0;
    }
}
